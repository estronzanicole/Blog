import { GraphQLResolveInfo } from 'graphql';
import { IResolver } from './PluginManagers/ResolverPluginManager';
export interface IResolverAccess {
    access(source: any, args: any, context: any, info: GraphQLResolveInfo): void;
}
export interface IResolverValidate {
    validate(source: any, args: any, context: any, info: GraphQLResolveInfo): void;
}
export interface IResolverResolve {
    resolve(source: any, args: any, context: any, info: GraphQLResolveInfo): any;
}
export declare abstract class ResolverBase implements IResolver, IResolverAccess, IResolverValidate, IResolverResolve {
    handle(source: any, args: any, context: any, info: any): any;
    access(source: any, args: any, context: any, info: GraphQLResolveInfo): void;
    validate(source: any, args: any, context: any, info: GraphQLResolveInfo): void;
    abstract resolve(source: any, args: any, context: any, info: GraphQLResolveInfo): any;
}
