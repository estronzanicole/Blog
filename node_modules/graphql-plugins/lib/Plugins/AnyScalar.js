"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const ScalarPluginManager_1 = require("../PluginManagers/ScalarPluginManager");
const graphql_1 = require("graphql");
let AnyScalar = class AnyScalar {
    constructor() {
        this.serialize = identity;
        this.parseValue = identity;
        this.parseLiteral = parseLiteral;
    }
};
AnyScalar = __decorate([
    ScalarPluginManager_1.PureScalar('Any')
], AnyScalar);
exports.AnyScalar = AnyScalar;
function identity(value) {
    return value;
}
function parseLiteral(ast, variables) {
    switch (ast.kind) {
        case graphql_1.Kind.STRING:
        case graphql_1.Kind.BOOLEAN:
            return ast.value;
        case graphql_1.Kind.INT:
        case graphql_1.Kind.FLOAT:
            return parseFloat(ast.value);
        case graphql_1.Kind.OBJECT:
            return parseObject(ast, variables);
        case graphql_1.Kind.LIST:
            return ast.values.map(n => parseLiteral(n, variables));
        case graphql_1.Kind.NULL:
            return null;
        case graphql_1.Kind.VARIABLE:
            return variables ? variables[ast.name.value] : undefined;
    }
}
function parseObject(ast, variables) {
    const value = {};
    for (const field of ast.fields) {
        value[field.name.value] = parseLiteral(field.value, variables);
    }
    return value;
}
exports.parseObject = parseObject;
//# sourceMappingURL=AnyScalar.js.map