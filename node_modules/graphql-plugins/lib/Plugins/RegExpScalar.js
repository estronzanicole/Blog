"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const ScalarPluginManager_1 = require("../PluginManagers/ScalarPluginManager");
const graphql_1 = require("graphql");
let RegExpScalar = class RegExpScalar {
    serialize(value) {
        return value.toString();
    }
    parseValue(value) {
        if (value[0] === '/') {
            const lastSlash = value.lastIndexOf('/');
            if (lastSlash > 0) {
                const pattern = value.substring(1, lastSlash);
                const flags = value.substring(lastSlash + 1);
                return RegExp(pattern, flags);
            }
        }
        return RegExp(value);
    }
    parseLiteral(valueNode, variables) {
        if (valueNode.kind === graphql_1.Kind.STRING) {
            return this.parseValue(valueNode.value);
        }
    }
};
RegExpScalar = __decorate([
    ScalarPluginManager_1.PureScalar('RegExp')
], RegExpScalar);
exports.RegExpScalar = RegExpScalar;
//# sourceMappingURL=RegExpScalar.js.map